@model SWEN_Dynamo.Models.StudentSurveyModel

@{
    ViewBag.Title = "StudentSurvey";
}

<h2>StudentSurvey</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>You are working on Student Survey</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SurveyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="text-left">
                    @Html.DisplayTextFor(model => model.SurveyID)
                    @Html.ValidationMessageFor(model => model.SurveyID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SurveyofType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="text-left">
                    @Html.DisplayTextFor(model => model.SurveyofType)
                    @Html.ValidationMessageFor(model => model.SurveyofType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="text-left">
                    @Html.DisplayTextFor(model => model.EventName)
                    @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Objective1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Objective1)
                        @Html.ValidationMessageFor(model => model.Objective1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.O1_Q1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.O1_Q1)
                        @Html.ValidationMessageFor(model => model.O1_Q1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.O1_Q2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.O1_Q2)
                        @Html.ValidationMessageFor(model => model.O1_Q2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Objective2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Objective2)
                        @Html.ValidationMessageFor(model => model.Objective2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Objective1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Objective1)
                        @Html.ValidationMessageFor(model => model.Objective1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomQuestion1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomQuestion1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomQuestion1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomQuestion2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomQuestion2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomQuestion2, "", new { @class = "text-danger" })
            </div>
        </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.OID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="SaveSurvey" value="Save Survey" class="btn btn-default" />
                    <input type="submit" name="DeploySurvey" value="Save and Deploy Survey" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
