@model SWEN_Dynamo.Models.DeploySurveyStart

@{
    ViewBag.Title = "DeploySurveyStart";
}

<h2>DeploySurveyStart</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DeploySurveyStart</h4>

      <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SurveyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="text-left">
                    @Html.DisplayTextFor(model => model.SurveyID)
                    @Html.ValidationMessageFor(model => model.SurveyID, "", new { @class = "text-danger" })
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResponseToken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResponseToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResponseToken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResponseToken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResponseToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResponseToken, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ResponseToken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResponseToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResponseToken, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ResponseToken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResponseToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResponseToken, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ResponseToken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResponseToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResponseToken, "", new { @class = "text-danger" })
            </div>
        </div>


 
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Deploy" class="btn btn-default"  />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Survey", "Index")
</div>
