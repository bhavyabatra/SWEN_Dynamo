@model SWEN_Dynamo.Models.ManageFeedbacks

@{
    ViewBag.Title = "FeedbackFirst";
}

<h2>Welcome @Html.DisplayFor(model => model.UserName)</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div>
            <h4>ManageFeedbacks</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.USID)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.USID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.EmailID)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EmailID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.FeedbackID)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.FeedbackID)
                </dd>
            </dl>
            @*<dt>
                    @Html.DisplayNameFor(model => model.UserName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.UserName)
                </dd>*@
            @*<div class="col-md-10">
                @Html.CheckBoxFor(model => model.CheckToOnlineTable, new { htmlAttributes = new { @class = "form-control" },  })
            </div>*@
            <h5> You Following Online Surveys have some responses. You may choose associated Survey from the following. </h5>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.SurveyID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EventName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SurveyType)
                    </th>
                </tr>
                @foreach (var item in Model.FLS)
                {
                    <tr>
                        <td>
                            @Html.RadioButtonFor(modelItem => modelItem.XYZ, item.SurveyID)
                            @Html.DisplayFor(modelItem => item.SurveyID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SurveyType)
                        </td>

                    </tr>
                }

            </table>

            <div class="form-group">
                @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateofEvent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateofEvent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateofEvent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NOG, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NOG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NOG, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AOG, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AOG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AOG, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumSWEV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumSWEV, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumSWEV, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NumOV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumOV, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumOV, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="Proceed" value="Proceed With Feedback" class="btn btn-default" />

                </div>
            </div>
        </div>
    </div>
}